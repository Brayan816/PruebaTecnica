{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROYECTOJOSE\\\\my-fullstack-app\\\\frontend\\\\src\\\\Mapa.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useMemo, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Configurar íconos por defecto de Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Componente para manejar la actualización de la vista del mapa y eventos de clic\nfunction MapEvents({\n  center,\n  zoom,\n  onMapClick\n}) {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.flyTo(center, zoom, {\n        duration: 1.5,\n        // Duración de la animación en segundos\n        easeLinearity: 0.25\n      });\n    }\n  }, [center, zoom, map]);\n\n  // Añadir evento de clic al mapa\n  useEffect(() => {\n    if (!map) return;\n    const handleMapClick = e => {\n      if (onMapClick) {\n        onMapClick(e.latlng);\n      }\n    };\n    map.on('click', handleMapClick);\n\n    // Cleanup\n    return () => {\n      map.off('click', handleMapClick);\n    };\n  }, [map, onMapClick]);\n  return null;\n}\n_s(MapEvents, \"tm7v5wxt+lXe+JHmDCjcGD98tIQ=\", false, function () {\n  return [useMap];\n});\n_c = MapEvents;\nconst initialCenter = [7.89391, -72.50782];\nexport default function Mapa() {\n  _s2();\n  const [center, setCenter] = useState(initialCenter);\n  const [mapZoom, setMapZoom] = useState(13);\n  const [searchText, setSearchText] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedLocations, setSelectedLocations] = useState([]);\n  const [clickMarker, setClickMarker] = useState(null);\n  const mapRef = useRef(null);\n\n  // Referencia para el temporizador de debounce\n  const searchTimeoutRef = useRef(null);\n  // Cache para almacenar resultados de búsquedas previas\n  const searchCacheRef = useRef({});\n\n  // Función para manejar la búsqueda de sugerencias con debounce y caché\n  const handleSearchChange = event => {\n    const query = event.target.value;\n    setSearchText(query);\n\n    // Limpiar cualquier temporizador existente\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n    if (query.length > 2) {\n      // Solo empezar a buscar después de 3 caracteres\n      setLoading(true);\n\n      // Verificar si tenemos resultados en caché\n      if (searchCacheRef.current[query]) {\n        setSuggestions(searchCacheRef.current[query]);\n        setLoading(false);\n        return;\n      }\n\n      // Establecer un temporizador para realizar la búsqueda (debounce)\n      searchTimeoutRef.current = setTimeout(() => {\n        fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${query}&addressdetails=1&limit=5&countrycodes=co&viewbox=-76.0,2.0,-70.0,12.0&bounded=1`).then(response => response.json()).then(data => {\n          const results = data.slice(0, 3); // Tomamos solo 3 sugerencias\n          // Guardar en caché\n          searchCacheRef.current[query] = results;\n          setSuggestions(results);\n          setLoading(false);\n        }).catch(err => {\n          console.error(\"Error al obtener sugerencias: \", err);\n          setLoading(false);\n        });\n      }, 300); // Esperar 300ms antes de realizar la búsqueda\n    } else {\n      setSuggestions([]);\n      setLoading(false);\n    }\n  };\n\n  // Función para manejar clics en el mapa\n  const handleMapClick = useCallback(latlng => {\n    setLoading(true);\n    const {\n      lat,\n      lng\n    } = latlng;\n\n    // Actualizar el marcador de clic temporal\n    setClickMarker({\n      lat,\n      lng\n    });\n\n    // Realizar geocodificación inversa para obtener la dirección\n    fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1&zoom=18`).then(response => response.json()).then(data => {\n      if (data && data.display_name) {\n        // Actualizar el campo de búsqueda con la dirección encontrada\n        setSearchText(data.display_name);\n\n        // Agregar la ubicación seleccionada a la lista\n        const newLocation = {\n          id: Date.now(),\n          position: [lat, lng],\n          name: data.name || data.display_name.split(',')[0],\n          fullName: data.display_name\n        };\n        setSelectedLocations(prevLocations => [...prevLocations, newLocation]);\n\n        // Actualizar centro del mapa\n        setCenter([lat, lng]);\n\n        // Limpiar el marcador temporal\n        setClickMarker(null);\n      }\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error en geocodificación inversa:\", error);\n      setLoading(false);\n    });\n  }, []);\n\n  // Función para manejar la selección de una sugerencia\n  const handleSuggestionClick = suggestion => {\n    const {\n      lat,\n      lon,\n      display_name\n    } = suggestion;\n    const newPosition = [parseFloat(lat), parseFloat(lon)];\n\n    // Agregar la ubicación seleccionada a la lista\n    const newLocation = {\n      id: Date.now(),\n      // ID único para cada ubicación\n      position: newPosition,\n      name: display_name.split(',')[0],\n      fullName: display_name\n    };\n    setSelectedLocations(prevLocations => [...prevLocations, newLocation]);\n\n    // Actualizar centro del mapa y zoom\n    setCenter(newPosition);\n    setMapZoom(13); // Puedes ajustar el nivel de zoom según necesites\n    setSearchText(display_name);\n    setSuggestions([]);\n  };\n\n  // Función para limpiar el campo de búsqueda\n  const clearSearch = () => {\n    setSearchText('');\n    setSuggestions([]);\n  };\n\n  // Función para eliminar una ubicación\n  const removeLocation = locationId => {\n    setSelectedLocations(prevLocations => prevLocations.filter(loc => loc.id !== locationId));\n  };\n\n  // Estilo personalizado para empujar los controles de zoom hacia abajo\n  const customMapStyle = `\n    .leaflet-top.leaflet-left {\n      top: 70px !important;\n    }\n    .map-click-info {\n      position: absolute;\n      bottom: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background-color: rgba(0, 0, 0, 0.7);\n      color: white;\n      padding: 8px 16px;\n      border-radius: 20px;\n      font-size: 14px;\n      z-index: 1000;\n      pointer-events: none;\n      transition: opacity 0.3s ease;\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: customMapStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-click-info\",\n      children: \"Haz clic en cualquier lugar del mapa para seleccionar una ubicaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-control\",\n      style: {\n        position: 'absolute',\n        top: '10px',\n        left: '10px',\n        right: '10px',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchText,\n          onChange: handleSearchChange,\n          placeholder: \"Buscar ubicaci\\xF3n (ciudad, direcci\\xF3n, lugar)\",\n          className: \"input-autocomplete\",\n          style: {\n            width: '100%',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ccc',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), searchText && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearSearch,\n          style: {\n            position: 'absolute',\n            right: '10px',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            background: 'none',\n            border: 'none',\n            cursor: 'pointer',\n            fontSize: '16px'\n          },\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'white',\n          padding: '10px',\n          borderRadius: '0 0 4px 4px',\n          border: '1px solid #ccc',\n          borderTop: 'none',\n          textAlign: 'center'\n        },\n        children: \"Cargando sugerencias...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          margin: '0',\n          padding: '0',\n          background: 'white',\n          border: '1px solid #ccc',\n          borderTop: 'none',\n          borderRadius: '0 0 4px 4px',\n          maxHeight: '200px',\n          overflowY: 'auto'\n        },\n        children: suggestions.map((suggestion, index) => {\n          // Determinar el tipo de ubicación\n          let type = 'Lugar';\n          if (suggestion.type === 'city' || suggestion.type === 'administrative') {\n            type = 'Ciudad';\n          } else if (suggestion.address && (suggestion.address.hospital || suggestion.address.hotel || suggestion.address.restaurant)) {\n            type = 'Establecimiento';\n          } else if (suggestion.address && suggestion.address.road) {\n            type = 'Dirección';\n          }\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSuggestionClick(suggestion),\n            style: {\n              padding: '10px',\n              borderBottom: index < suggestions.length - 1 ? '1px solid #eee' : 'none',\n              cursor: 'pointer'\n            },\n            onMouseOver: e => e.target.style.backgroundColor = '#f5f5f5',\n            onMouseOut: e => e.target.style.backgroundColor = 'transparent',\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: suggestion.display_name.split(',')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                color: '#666'\n              },\n              children: suggestion.display_name.split(',').slice(1).join(',')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '11px',\n                color: '#999',\n                fontStyle: 'italic'\n              },\n              children: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: initialCenter,\n      zoom: 13,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapEvents, {\n        center: center,\n        zoom: mapZoom,\n        onMapClick: handleMapClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), selectedLocations.map(location => /*#__PURE__*/_jsxDEV(Marker, {\n        position: location.position,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: location.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '12px',\n                margin: '5px 0'\n              },\n              children: location.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeLocation(location.id),\n              style: {\n                padding: '3px 8px',\n                background: '#f44336',\n                color: 'white',\n                border: 'none',\n                borderRadius: '3px',\n                cursor: 'pointer',\n                fontSize: '12px'\n              },\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)\n      }, location.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this)), clickMarker && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [clickMarker.lat, clickMarker.lng],\n        opacity: 0.7,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          autoOpen: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '5px 0'\n              },\n              children: \"Obteniendo informaci\\xF3n...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s2(Mapa, \"UYS3ESXEZgWBkIP1Ttp/dV4wqqs=\");\n_c2 = Mapa;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapEvents\");\n$RefreshReg$(_c2, \"Mapa\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useMemo","useCallback","MapContainer","TileLayer","Marker","Popup","useMap","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapEvents","center","zoom","onMapClick","_s","map","flyTo","duration","easeLinearity","handleMapClick","e","latlng","on","off","_c","initialCenter","Mapa","_s2","setCenter","mapZoom","setMapZoom","searchText","setSearchText","suggestions","setSuggestions","loading","setLoading","selectedLocations","setSelectedLocations","clickMarker","setClickMarker","mapRef","searchTimeoutRef","searchCacheRef","handleSearchChange","event","query","target","value","current","clearTimeout","length","setTimeout","fetch","then","response","json","data","results","slice","catch","err","console","error","lat","lng","display_name","newLocation","id","Date","now","position","name","split","fullName","prevLocations","handleSuggestionClick","suggestion","lon","newPosition","parseFloat","clearSearch","removeLocation","locationId","filter","loc","customMapStyle","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","className","top","left","right","zIndex","type","onChange","placeholder","padding","borderRadius","border","boxShadow","onClick","transform","background","cursor","fontSize","borderTop","textAlign","listStyle","margin","maxHeight","overflowY","index","address","hospital","hotel","restaurant","road","borderBottom","onMouseOver","backgroundColor","onMouseOut","fontWeight","color","join","fontStyle","ref","url","attribution","location","opacity","autoOpen","_c2","$RefreshReg$"],"sources":["C:/PROYECTOJOSE/my-fullstack-app/frontend/src/Mapa.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Configurar íconos por defecto de Leaflet\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\n// Componente para manejar la actualización de la vista del mapa y eventos de clic\r\nfunction MapEvents({ center, zoom, onMapClick }) {\r\n  const map = useMap();\r\n  \r\n  useEffect(() => {\r\n    if (center) {\r\n      map.flyTo(center, zoom, {\r\n        duration: 1.5, // Duración de la animación en segundos\r\n        easeLinearity: 0.25\r\n      });\r\n    }\r\n  }, [center, zoom, map]);\r\n  \r\n  // Añadir evento de clic al mapa\r\n  useEffect(() => {\r\n    if (!map) return;\r\n    \r\n    const handleMapClick = (e) => {\r\n      if (onMapClick) {\r\n        onMapClick(e.latlng);\r\n      }\r\n    };\r\n    \r\n    map.on('click', handleMapClick);\r\n    \r\n    // Cleanup\r\n    return () => {\r\n      map.off('click', handleMapClick);\r\n    };\r\n  }, [map, onMapClick]);\r\n  \r\n  return null;\r\n}\r\n\r\nconst initialCenter = [7.89391, -72.50782];\r\n\r\nexport default function Mapa() {\r\n  const [center, setCenter] = useState(initialCenter);\r\n  const [mapZoom, setMapZoom] = useState(13);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedLocations, setSelectedLocations] = useState([]);\r\n  const [clickMarker, setClickMarker] = useState(null);\r\n  const mapRef = useRef(null);\r\n  \r\n  // Referencia para el temporizador de debounce\r\n  const searchTimeoutRef = useRef(null);\r\n  // Cache para almacenar resultados de búsquedas previas\r\n  const searchCacheRef = useRef({});\r\n  \r\n  // Función para manejar la búsqueda de sugerencias con debounce y caché\r\n  const handleSearchChange = (event) => {\r\n    const query = event.target.value;\r\n    setSearchText(query);\r\n\r\n    // Limpiar cualquier temporizador existente\r\n    if (searchTimeoutRef.current) {\r\n      clearTimeout(searchTimeoutRef.current);\r\n    }\r\n\r\n    if (query.length > 2) { // Solo empezar a buscar después de 3 caracteres\r\n      setLoading(true);\r\n      \r\n      // Verificar si tenemos resultados en caché\r\n      if (searchCacheRef.current[query]) {\r\n        setSuggestions(searchCacheRef.current[query]);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Establecer un temporizador para realizar la búsqueda (debounce)\r\n      searchTimeoutRef.current = setTimeout(() => {\r\n        fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${query}&addressdetails=1&limit=5&countrycodes=co&viewbox=-76.0,2.0,-70.0,12.0&bounded=1`)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            const results = data.slice(0, 3); // Tomamos solo 3 sugerencias\r\n            // Guardar en caché\r\n            searchCacheRef.current[query] = results;\r\n            setSuggestions(results);\r\n            setLoading(false);\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Error al obtener sugerencias: \", err);\r\n            setLoading(false);\r\n          });\r\n      }, 300); // Esperar 300ms antes de realizar la búsqueda\r\n    } else {\r\n      setSuggestions([]);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Función para manejar clics en el mapa\r\n  const handleMapClick = useCallback((latlng) => {\r\n    setLoading(true);\r\n    const { lat, lng } = latlng;\r\n    \r\n    // Actualizar el marcador de clic temporal\r\n    setClickMarker({ lat, lng });\r\n    \r\n    // Realizar geocodificación inversa para obtener la dirección\r\n    fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1&zoom=18`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data && data.display_name) {\r\n          // Actualizar el campo de búsqueda con la dirección encontrada\r\n          setSearchText(data.display_name);\r\n          \r\n          // Agregar la ubicación seleccionada a la lista\r\n          const newLocation = {\r\n            id: Date.now(),\r\n            position: [lat, lng],\r\n            name: data.name || data.display_name.split(',')[0],\r\n            fullName: data.display_name\r\n          };\r\n          \r\n          setSelectedLocations(prevLocations => [...prevLocations, newLocation]);\r\n          \r\n          // Actualizar centro del mapa\r\n          setCenter([lat, lng]);\r\n          \r\n          // Limpiar el marcador temporal\r\n          setClickMarker(null);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error en geocodificación inversa:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Función para manejar la selección de una sugerencia\r\n  const handleSuggestionClick = (suggestion) => {\r\n    const { lat, lon, display_name } = suggestion;\r\n    const newPosition = [parseFloat(lat), parseFloat(lon)];\r\n    \r\n    // Agregar la ubicación seleccionada a la lista\r\n    const newLocation = {\r\n      id: Date.now(), // ID único para cada ubicación\r\n      position: newPosition,\r\n      name: display_name.split(',')[0],\r\n      fullName: display_name\r\n    };\r\n    \r\n    setSelectedLocations(prevLocations => [...prevLocations, newLocation]);\r\n    \r\n    // Actualizar centro del mapa y zoom\r\n    setCenter(newPosition);\r\n    setMapZoom(13); // Puedes ajustar el nivel de zoom según necesites\r\n    setSearchText(display_name);\r\n    setSuggestions([]);\r\n  };\r\n\r\n  // Función para limpiar el campo de búsqueda\r\n  const clearSearch = () => {\r\n    setSearchText('');\r\n    setSuggestions([]);\r\n  };\r\n\r\n  // Función para eliminar una ubicación\r\n  const removeLocation = (locationId) => {\r\n    setSelectedLocations(prevLocations => \r\n      prevLocations.filter(loc => loc.id !== locationId)\r\n    );\r\n  };\r\n\r\n  // Estilo personalizado para empujar los controles de zoom hacia abajo\r\n  const customMapStyle = `\r\n    .leaflet-top.leaflet-left {\r\n      top: 70px !important;\r\n    }\r\n    .map-click-info {\r\n      position: absolute;\r\n      bottom: 20px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      background-color: rgba(0, 0, 0, 0.7);\r\n      color: white;\r\n      padding: 8px 16px;\r\n      border-radius: 20px;\r\n      font-size: 14px;\r\n      z-index: 1000;\r\n      pointer-events: none;\r\n      transition: opacity 0.3s ease;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n      {/* Estilos personalizados para los controles de zoom */}\r\n      <style>{customMapStyle}</style>\r\n      \r\n      {/* Mensaje de ayuda para el usuario */}\r\n      <div className=\"map-click-info\">\r\n        Haz clic en cualquier lugar del mapa para seleccionar una ubicación\r\n      </div>\r\n      \r\n      {/* Barra de búsqueda */}\r\n      <div className=\"search-control\" style={{ \r\n        position: 'absolute', \r\n        top: '10px', \r\n        left: '10px', \r\n        right: '10px', \r\n        zIndex: 1000 \r\n      }}>\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={handleSearchChange}\r\n            placeholder=\"Buscar ubicación (ciudad, dirección, lugar)\"\r\n            className=\"input-autocomplete\"\r\n            style={{ \r\n              width: '100%', \r\n              padding: '10px', \r\n              borderRadius: '4px',\r\n              border: '1px solid #ccc',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n            }}\r\n          />\r\n          \r\n          {searchText && (\r\n            <button \r\n              onClick={clearSearch}\r\n              style={{\r\n                position: 'absolute',\r\n                right: '10px',\r\n                top: '50%',\r\n                transform: 'translateY(-50%)',\r\n                background: 'none',\r\n                border: 'none',\r\n                cursor: 'pointer',\r\n                fontSize: '16px'\r\n              }}\r\n            >\r\n              ✕\r\n            </button>\r\n          )}\r\n        </div>\r\n        \r\n        {loading && (\r\n          <div style={{ \r\n            background: 'white', \r\n            padding: '10px', \r\n            borderRadius: '0 0 4px 4px',\r\n            border: '1px solid #ccc',\r\n            borderTop: 'none',\r\n            textAlign: 'center'\r\n          }}>\r\n            Cargando sugerencias...\r\n          </div>\r\n        )}\r\n        \r\n        {suggestions.length > 0 && (\r\n          <ul style={{ \r\n            listStyle: 'none',\r\n            margin: '0',\r\n            padding: '0',\r\n            background: 'white',\r\n            border: '1px solid #ccc',\r\n            borderTop: 'none',\r\n            borderRadius: '0 0 4px 4px',\r\n            maxHeight: '200px',\r\n            overflowY: 'auto'\r\n          }}>\r\n            {suggestions.map((suggestion, index) => {\r\n              // Determinar el tipo de ubicación\r\n              let type = 'Lugar';\r\n              if (suggestion.type === 'city' || suggestion.type === 'administrative') {\r\n                type = 'Ciudad';\r\n              } else if (suggestion.address && (\r\n                suggestion.address.hospital || \r\n                suggestion.address.hotel || \r\n                suggestion.address.restaurant)\r\n              ) {\r\n                type = 'Establecimiento';\r\n              } else if (suggestion.address && suggestion.address.road) {\r\n                type = 'Dirección';\r\n              }\r\n              \r\n              return (\r\n                <li \r\n                  key={index} \r\n                  onClick={() => handleSuggestionClick(suggestion)}\r\n                  style={{ \r\n                    padding: '10px',\r\n                    borderBottom: index < suggestions.length - 1 ? '1px solid #eee' : 'none',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                  onMouseOver={(e) => e.target.style.backgroundColor = '#f5f5f5'}\r\n                  onMouseOut={(e) => e.target.style.backgroundColor = 'transparent'}\r\n                >\r\n                  <div style={{ fontWeight: 'bold' }}>\r\n                    {suggestion.display_name.split(',')[0]}\r\n                  </div>\r\n                  <div style={{ fontSize: '12px', color: '#666' }}>\r\n                    {suggestion.display_name.split(',').slice(1).join(',')}\r\n                  </div>\r\n                  <div style={{ fontSize: '11px', color: '#999', fontStyle: 'italic' }}>\r\n                    {type}\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      {/* Mapa Leaflet */}\r\n      <MapContainer\r\n        center={initialCenter}\r\n        zoom={13}\r\n        style={{ width: '100%', height: '100%' }}\r\n        ref={mapRef}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution=\"© OpenStreetMap contributors\"\r\n        />\r\n        \r\n        {/* Componente para cambiar la vista del mapa y manejar eventos */}\r\n        <MapEvents \r\n          center={center} \r\n          zoom={mapZoom} \r\n          onMapClick={handleMapClick} \r\n        />\r\n        \r\n        {/* Marcadores para cada ubicación seleccionada */}\r\n        {selectedLocations.map((location) => (\r\n          <Marker key={location.id} position={location.position}>\r\n            <Popup>\r\n              <div>\r\n                <strong>{location.name}</strong>\r\n                <p style={{ fontSize: '12px', margin: '5px 0' }}>{location.fullName}</p>\r\n                <button \r\n                  onClick={() => removeLocation(location.id)}\r\n                  style={{\r\n                    padding: '3px 8px',\r\n                    background: '#f44336',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '3px',\r\n                    cursor: 'pointer',\r\n                    fontSize: '12px'\r\n                  }}\r\n                >\r\n                  Eliminar\r\n                </button>\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n        \r\n        {/* Marcador temporal para la ubicación clickeada */}\r\n        {clickMarker && (\r\n          <Marker \r\n            position={[clickMarker.lat, clickMarker.lng]}\r\n            opacity={0.7}\r\n          >\r\n            <Popup autoOpen={true}>\r\n              <div>\r\n                <p style={{ margin: '5px 0' }}>Obteniendo información...</p>\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        )}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}