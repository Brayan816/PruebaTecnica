{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROYECTOJOSE\\\\my-fullstack-app\\\\frontend\\\\src\\\\LeafletSearchMap.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet-control-geocoder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeafletSearchMap() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [position, setPosition] = useState([-34.6037, -58.3816]); // Ubicación inicial\n  const [searchText, setSearchText] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const markerRef = useRef(null);\n  const mapRef = useRef();\n\n  // Función para manejar la búsqueda de sugerencias\n  const handleSearchChange = event => {\n    const query = event.target.value;\n    setSearchText(query);\n    if (query.length > 2) {\n      // Solo empezar a buscar después de 3 caracteres\n      setLoading(true);\n      fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${query}&addressdetails=1&limit=5`).then(response => response.json()).then(data => {\n        const results = data.slice(0, 3); // Tomamos solo 3 sugerencias\n        setSuggestions(results);\n        setLoading(false);\n      }).catch(err => {\n        console.error(\"Error al obtener sugerencias: \", err);\n        setLoading(false);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  // Función para manejar la selección de una sugerencia\n  const handleSuggestionClick = suggestion => {\n    const {\n      lat,\n      lon,\n      display_name\n    } = suggestion;\n    setPosition([lat, lon]);\n    setSearchText(display_name); // Actualiza el campo de búsqueda con la descripción de la ubicación\n    setSuggestions([]); // Limpiar las sugerencias\n    const map = mapRef.current;\n    map.setView([lat, lon], 13); // Mover el mapa a la nueva ubicación\n  };\n\n  // Manejador de eventos para el mapa (cuando se hace clic en él)\n  function MapEventHandler() {\n    _s();\n    useMapEvents({\n      click(e) {\n        const {\n          latlng\n        } = e;\n        setPosition([latlng.lat, latlng.lng]);\n        const geocoder = L.Control.Geocoder.nominatim();\n        geocoder.reverse(latlng, mapRef.current.options.crs.scale(mapRef.current.getZoom()), results => {\n          if (results.length > 0) {\n            setSearchText(results[0].name);\n          }\n        });\n      }\n    });\n    return null;\n  }\n  _s(MapEventHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchText,\n      onChange: handleSearchChange,\n      placeholder: \"Buscar ubicaci\\xF3n\",\n      className: \"input-autocomplete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando sugerencias...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions-list\",\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSuggestionClick(suggestion),\n        children: suggestion.display_name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: position,\n      zoom: 13,\n      style: {\n        height: '90%',\n        width: '100%'\n      },\n      whenCreated: mapInstance => mapRef.current = mapInstance,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 OpenStreetMap contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: position,\n        ref: markerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapEventHandler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s2(LeafletSearchMap, \"3s9LmAK5gGCEaxn29OyQwhYNZUo=\");\n_c = LeafletSearchMap;\nvar _c;\n$RefreshReg$(_c, \"LeafletSearchMap\");","map":{"version":3,"names":["React","useEffect","useState","useRef","MapContainer","TileLayer","Marker","useMapEvents","L","jsxDEV","_jsxDEV","LeafletSearchMap","_s2","_s","$RefreshSig$","position","setPosition","searchText","setSearchText","suggestions","setSuggestions","loading","setLoading","markerRef","mapRef","handleSearchChange","event","query","target","value","length","fetch","then","response","json","data","results","slice","catch","err","console","error","handleSuggestionClick","suggestion","lat","lon","display_name","map","current","setView","MapEventHandler","click","e","latlng","lng","geocoder","Control","Geocoder","nominatim","reverse","options","crs","scale","getZoom","name","style","height","width","children","type","onChange","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","center","zoom","whenCreated","mapInstance","attribution","url","ref","_c","$RefreshReg$"],"sources":["C:/PROYECTOJOSE/my-fullstack-app/frontend/src/LeafletSearchMap.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet-control-geocoder';\r\n\r\nexport default function LeafletSearchMap() {\r\n  const [position, setPosition] = useState([-34.6037, -58.3816]); // Ubicación inicial\r\n  const [searchText, setSearchText] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const markerRef = useRef(null);\r\n  const mapRef = useRef();\r\n\r\n  // Función para manejar la búsqueda de sugerencias\r\n  const handleSearchChange = (event) => {\r\n    const query = event.target.value;\r\n    setSearchText(query);\r\n\r\n    if (query.length > 2) { // Solo empezar a buscar después de 3 caracteres\r\n      setLoading(true);\r\n      fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${query}&addressdetails=1&limit=5`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const results = data.slice(0, 3); // Tomamos solo 3 sugerencias\r\n          setSuggestions(results);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error al obtener sugerencias: \", err);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n\r\n  // Función para manejar la selección de una sugerencia\r\n  const handleSuggestionClick = (suggestion) => {\r\n    const { lat, lon, display_name } = suggestion;\r\n    setPosition([lat, lon]);\r\n    setSearchText(display_name); // Actualiza el campo de búsqueda con la descripción de la ubicación\r\n    setSuggestions([]); // Limpiar las sugerencias\r\n    const map = mapRef.current;\r\n    map.setView([lat, lon], 13); // Mover el mapa a la nueva ubicación\r\n  };\r\n\r\n  // Manejador de eventos para el mapa (cuando se hace clic en él)\r\n  function MapEventHandler() {\r\n    useMapEvents({\r\n      click(e) {\r\n        const { latlng } = e;\r\n        setPosition([latlng.lat, latlng.lng]);\r\n        const geocoder = L.Control.Geocoder.nominatim();\r\n        geocoder.reverse(latlng, mapRef.current.options.crs.scale(mapRef.current.getZoom()), results => {\r\n          if (results.length > 0) {\r\n            setSearchText(results[0].name);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: '100%', width: '100%' }}>\r\n      <input\r\n        type=\"text\"\r\n        value={searchText}\r\n        onChange={handleSearchChange}\r\n        placeholder=\"Buscar ubicación\"\r\n        className=\"input-autocomplete\"\r\n      />\r\n      {loading && <div>Cargando sugerencias...</div>}\r\n      <ul className=\"suggestions-list\">\r\n        {suggestions.map((suggestion, index) => (\r\n          <li key={index} onClick={() => handleSuggestionClick(suggestion)}>\r\n            {suggestion.display_name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <MapContainer\r\n        center={position}\r\n        zoom={13}\r\n        style={{ height: '90%', width: '100%' }}\r\n        whenCreated={(mapInstance) => (mapRef.current = mapInstance)}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; OpenStreetMap contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={position} ref={markerRef} />\r\n        <MapEventHandler />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}