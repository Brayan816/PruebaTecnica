{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROYECTOJOSE\\\\my-fullstack-app\\\\frontend\\\\src\\\\LeafletSearchMap.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet-control-geocoder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeafletSearchMap() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [position, setPosition] = useState([-34.6037, -58.3816]); // Ubicación inicial\n  const [searchText, setSearchText] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const markerRef = useRef(null);\n  const mapRef = useRef();\n\n  // Inicialización del mapa y geocoder\n  useEffect(() => {\n    if (!mapRef.current) return;\n    const map = mapRef.current;\n    const geocoder = L.Control.geocoder({\n      defaultMarkGeocode: false\n    }).on('markgeocode', function (e) {\n      const {\n        center,\n        name\n      } = e.geocode;\n      setPosition([center.lat, center.lng]);\n      setSearchText(name);\n      map.setView([center.lat, center.lng], 13);\n    }).addTo(map);\n    return () => map.removeControl(geocoder);\n  }, [mapRef.current]);\n\n  // Función para buscar sugerencias\n  const searchLocation = async query => {\n    if (query.length < 3) {\n      setSuggestions([]); // Si la búsqueda tiene menos de 3 caracteres, no mostrar sugerencias.\n      return;\n    }\n    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${query}&addressdetails=1&limit=3`;\n    const response = await fetch(url);\n    const data = await response.json();\n    setSuggestions(data);\n  };\n\n  // Manejar el cambio en el campo de búsqueda\n  const handleSearchChange = e => {\n    const value = e.target.value;\n    setSearchText(value);\n    searchLocation(value); // Llamamos a la función de búsqueda\n  };\n\n  // Manejar la selección de una sugerencia\n  const handleSuggestionClick = (lat, lon, name) => {\n    setPosition([lat, lon]);\n    setSearchText(name);\n    mapRef.current.setView([lat, lon], 13); // Centrar el mapa en la ubicación seleccionada\n  };\n\n  // Manejar la selección de una ubicación en el mapa\n  function MapEventHandler() {\n    _s();\n    useMapEvents({\n      click(e) {\n        const {\n          latlng\n        } = e;\n        setPosition([latlng.lat, latlng.lng]);\n        const geocoder = L.Control.Geocoder.nominatim();\n        geocoder.reverse(latlng, mapRef.current.options.crs.scale(mapRef.current.getZoom()), results => {\n          if (results.length > 0) {\n            setSearchText(results[0].name);\n          }\n        });\n      }\n    });\n    return null;\n  }\n  _s(MapEventHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchText,\n      onChange: handleSearchChange,\n      placeholder: \"Buscar ubicaci\\xF3n\",\n      className: \"input-autocomplete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions\",\n      children: suggestions.length > 0 && suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestion-item\",\n        onClick: () => handleSuggestionClick(suggestion.lat, suggestion.lon, suggestion.display_name),\n        children: suggestion.display_name\n      }, suggestion.place_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: position,\n      zoom: 13,\n      style: {\n        height: '90%',\n        width: '100%'\n      },\n      whenCreated: mapInstance => mapRef.current = mapInstance,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 OpenStreetMap contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: position,\n        ref: markerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapEventHandler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s2(LeafletSearchMap, \"ubrGAMhImxRrnSrPnvT7TstheLQ=\");\n_c = LeafletSearchMap;\nvar _c;\n$RefreshReg$(_c, \"LeafletSearchMap\");","map":{"version":3,"names":["React","useEffect","useState","useRef","MapContainer","TileLayer","Marker","useMapEvents","L","jsxDEV","_jsxDEV","LeafletSearchMap","_s2","_s","$RefreshSig$","position","setPosition","searchText","setSearchText","suggestions","setSuggestions","markerRef","mapRef","current","map","geocoder","Control","defaultMarkGeocode","on","e","center","name","geocode","lat","lng","setView","addTo","removeControl","searchLocation","query","length","url","response","fetch","data","json","handleSearchChange","value","target","handleSuggestionClick","lon","MapEventHandler","click","latlng","Geocoder","nominatim","reverse","options","crs","scale","getZoom","results","style","height","width","children","type","onChange","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","suggestion","onClick","display_name","place_id","zoom","whenCreated","mapInstance","attribution","ref","_c","$RefreshReg$"],"sources":["C:/PROYECTOJOSE/my-fullstack-app/frontend/src/LeafletSearchMap.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet-control-geocoder';\r\n\r\nexport default function LeafletSearchMap() {\r\n  const [position, setPosition] = useState([-34.6037, -58.3816]);  // Ubicación inicial\r\n  const [searchText, setSearchText] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const markerRef = useRef(null);\r\n  const mapRef = useRef();\r\n\r\n  // Inicialización del mapa y geocoder\r\n  useEffect(() => {\r\n    if (!mapRef.current) return;\r\n    const map = mapRef.current;\r\n\r\n    const geocoder = L.Control.geocoder({\r\n      defaultMarkGeocode: false,\r\n    })\r\n      .on('markgeocode', function (e) {\r\n        const { center, name } = e.geocode;\r\n        setPosition([center.lat, center.lng]);\r\n        setSearchText(name);\r\n        map.setView([center.lat, center.lng], 13);\r\n      })\r\n      .addTo(map);\r\n\r\n    return () => map.removeControl(geocoder);\r\n  }, [mapRef.current]);\r\n\r\n  // Función para buscar sugerencias\r\n  const searchLocation = async (query) => {\r\n    if (query.length < 3) {\r\n      setSuggestions([]);  // Si la búsqueda tiene menos de 3 caracteres, no mostrar sugerencias.\r\n      return;\r\n    }\r\n    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${query}&addressdetails=1&limit=3`;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setSuggestions(data);\r\n  };\r\n\r\n  // Manejar el cambio en el campo de búsqueda\r\n  const handleSearchChange = (e) => {\r\n    const value = e.target.value;\r\n    setSearchText(value);\r\n    searchLocation(value);  // Llamamos a la función de búsqueda\r\n  };\r\n\r\n  // Manejar la selección de una sugerencia\r\n  const handleSuggestionClick = (lat, lon, name) => {\r\n    setPosition([lat, lon]);\r\n    setSearchText(name);\r\n    mapRef.current.setView([lat, lon], 13);  // Centrar el mapa en la ubicación seleccionada\r\n  };\r\n\r\n  // Manejar la selección de una ubicación en el mapa\r\n  function MapEventHandler() {\r\n    useMapEvents({\r\n      click(e) {\r\n        const { latlng } = e;\r\n        setPosition([latlng.lat, latlng.lng]);\r\n        const geocoder = L.Control.Geocoder.nominatim();\r\n        geocoder.reverse(latlng, mapRef.current.options.crs.scale(mapRef.current.getZoom()), (results) => {\r\n          if (results.length > 0) {\r\n            setSearchText(results[0].name);\r\n          }\r\n        });\r\n      },\r\n    });\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: '100%', width: '100%' }}>\r\n      <input\r\n        type=\"text\"\r\n        value={searchText}\r\n        onChange={handleSearchChange}\r\n        placeholder=\"Buscar ubicación\"\r\n        className=\"input-autocomplete\"\r\n      />\r\n      <div className=\"suggestions\">\r\n        {suggestions.length > 0 &&\r\n          suggestions.map((suggestion) => (\r\n            <div\r\n              key={suggestion.place_id}\r\n              className=\"suggestion-item\"\r\n              onClick={() =>\r\n                handleSuggestionClick(suggestion.lat, suggestion.lon, suggestion.display_name)\r\n              }\r\n            >\r\n              {suggestion.display_name}\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <MapContainer\r\n        center={position}\r\n        zoom={13}\r\n        style={{ height: '90%', width: '100%' }}\r\n        whenCreated={(mapInstance) => (mapRef.current = mapInstance)}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; OpenStreetMap contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={position} ref={markerRef} />\r\n        <MapEventHandler />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}